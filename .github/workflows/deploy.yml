name: CI
on: [push]
jobs:
  # test:
  #   ...
  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    # needs: test
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZWQyNTUxOQAAACDO1FvZ7JONyC0pMSRnIz2HTsENEJZr5c7VWSLH9lGUogAAAJi8LMxBvCzMQQAAAAtzc2gtZWQyNTUxOQAAACDO1FvZ7JONyC0pMSRnIz2HTsENEJZr5c7VWSLH9lGUogAAAEAZ7G10jBfKPCJzZRmBXxwLBQRyQJUay2HE7WfC8c70G87UW9nsk3ILSkxJGcjPYdOwQ0QlmvlztVZIsf2UZSiAAAAE3Nhbml0LnZha0BnbWFpbC5jb20BAg==

      - name: Stop the server
        run: ssh staging 'cd /api'

      # - name: Check out the source
      #   run: ssh staging 'cd my-application && git fetch && git reset --hard origin/master'

      # - name: Start the server
      #   if: ${{ always() }}
      #   run: ssh staging 'sudo systemctl start my-application'